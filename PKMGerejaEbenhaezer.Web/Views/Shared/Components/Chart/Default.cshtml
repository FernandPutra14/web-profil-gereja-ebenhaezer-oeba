@using Newtonsoft.Json
@model ChartModel
@{
    var labels = JsonConvert.SerializeObject(Model.Data.Keys);
    var data = JsonConvert.SerializeObject(Model.Data.Values.Select(v => (int)v));
}

<canvas id="chart"></canvas>
<input id="labels" hidden value="@labels"/>
<input id="data" hidden value="@data"/>

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', () => {
        const ctx = document.getElementById('chart');
        const labelsJson = $('#labels').val();
        const labels = JSON.parse(labelsJson);
        const dataJson = $('#data').val();
        const data = JSON.parse(dataJson);

        let chart;
        let isAnimating = false;

        function createChart() {
            chart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        label: '@(Model.Label)',
                        data: data,
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true,
                    borderWidth: 20,
                    borderRadius: 1,
                    animation: {
                        duration: 4000
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'right',
                            labels: {
                                font: {
                                    size: 14
                                },
                                padding: 35
                            }
                        }
                    }
                }
            });
        }

        const observer = new IntersectionObserver(function (entries) {
            if (entries[0].isIntersecting === true && !isAnimating) {
                isAnimating = true;
                setTimeout(() => {
                    if (chart) {
                        chart.destroy();
                    }
                    createChart();
                }, 300);
            } else if (entries[0].isIntersecting === false) {
                isAnimating = false;
            }
        }, { threshold: [0.1] });

        observer.observe(document.querySelector("#chart"));
    });
</script>